name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE: ${{ secrets.CUSTOM_DOCKER_USERNAME }}/crawl4ai-mcp
  K8S_NAMESPACE: crawl4ai

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.CUSTOM_DOCKER_USERNAME }}
          password: ${{ secrets.CUSTOM_DOCKER_PASSWORD }}
      
      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE }}
          tags: |
            type=sha,prefix=,suffix=
            type=ref,event=branch
            type=ref,event=tag
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
      
      - name: Install ArgoCD CLI
        run: |
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd
      
      - name: Login to ArgoCD
        run: |
          argocd login ${{ secrets.CUSTOM_ARGOCD_SERVER }} \
            --username ${{ secrets.CUSTOM_ARGOCD_USERNAME }} \
            --password ${{ secrets.CUSTOM_ARGOCD_PASSWORD }} \
            --insecure \
            --grpc-web
      
      - name: Update deployment image
        run: |
          argocd app set ${{ secrets.CUSTOM_ARGOCD_APP_NAME }} \
            --parameter image.tag=${{ github.sha }}
      
      - name: Sync ArgoCD application
        run: |
          argocd app sync ${{ secrets.CUSTOM_ARGOCD_APP_NAME }} \
            --force \
            --prune \
            --self-heal 